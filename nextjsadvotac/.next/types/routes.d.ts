// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/app" | "/assistant" | "/assistant/a/[token]" | "/assistant/analysis/[id]" | "/assistant/task/[token]" | "/assistent/a/[token]" | "/auth" | "/auth/callback" | "/auth/otp" | "/dashboard" | "/drafting" | "/history" | "/privacy" | "/research" | "/settings" | "/team" | "/test_dashboard" | "/workflow"
type AppRouteHandlerRoutes = "/api/assistant/analysis" | "/api/assistant/analysis/[token]" | "/api/auth/[...nextauth]" | "/api/test-db" | "/api/test-db-connection" | "/api/test-env" | "/api/user/profile"
type PageRoutes = never
type LayoutRoutes = "/" | "/app"
type RedirectRoutes = never
type RewriteRoutes = "/api/fastapi/[[...path]]"
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/api/assistant/analysis": {}
  "/api/assistant/analysis/[token]": { "token": string; }
  "/api/auth/[...nextauth]": { "nextauth": string[]; }
  "/api/fastapi/[[...path]]": { "path"?: string[]; }
  "/api/test-db": {}
  "/api/test-db-connection": {}
  "/api/test-env": {}
  "/api/user/profile": {}
  "/app": {}
  "/assistant": {}
  "/assistant/a/[token]": { "token": string; }
  "/assistant/analysis/[id]": { "id": string; }
  "/assistant/task/[token]": { "token": string; }
  "/assistent/a/[token]": { "token": string; }
  "/auth": {}
  "/auth/callback": {}
  "/auth/otp": {}
  "/dashboard": {}
  "/drafting": {}
  "/history": {}
  "/privacy": {}
  "/research": {}
  "/settings": {}
  "/team": {}
  "/test_dashboard": {}
  "/workflow": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/app": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
