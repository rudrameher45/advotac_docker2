{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [
      {
        "source": "/api/fastapi/:path*",
        "destination": "https://api.advotac.com/api/:path*",
        "regex": "^/api/fastapi(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
      }
    ],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/assistant/analysis/[token]",
      "regex": "^/api/assistant/analysis/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtoken": "nxtPtoken"
      },
      "namedRegex": "^/api/assistant/analysis/(?<nxtPtoken>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/auth/[...nextauth]",
      "regex": "^/api/auth/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPnextauth": "nxtPnextauth"
      },
      "namedRegex": "^/api/auth/(?<nxtPnextauth>.+?)(?:/)?$"
    },
    {
      "page": "/assistant/a/[token]",
      "regex": "^/assistant/a/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtoken": "nxtPtoken"
      },
      "namedRegex": "^/assistant/a/(?<nxtPtoken>[^/]+?)(?:/)?$"
    },
    {
      "page": "/assistant/analysis/[id]",
      "regex": "^/assistant/analysis/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/assistant/analysis/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/assistant/task/[token]",
      "regex": "^/assistant/task/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtoken": "nxtPtoken"
      },
      "namedRegex": "^/assistant/task/(?<nxtPtoken>[^/]+?)(?:/)?$"
    },
    {
      "page": "/assistent/a/[token]",
      "regex": "^/assistent/a/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtoken": "nxtPtoken"
      },
      "namedRegex": "^/assistent/a/(?<nxtPtoken>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/about",
      "regex": "^/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/about(?:/)?$"
    },
    {
      "page": "/app",
      "regex": "^/app(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/app(?:/)?$"
    },
    {
      "page": "/assistant",
      "regex": "^/assistant(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/assistant(?:/)?$"
    },
    {
      "page": "/auth",
      "regex": "^/auth(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth(?:/)?$"
    },
    {
      "page": "/auth/callback",
      "regex": "^/auth/callback(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/callback(?:/)?$"
    },
    {
      "page": "/auth/otp",
      "regex": "^/auth/otp(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/otp(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/drafting",
      "regex": "^/drafting(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/drafting(?:/)?$"
    },
    {
      "page": "/history",
      "regex": "^/history(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/history(?:/)?$"
    },
    {
      "page": "/privacy",
      "regex": "^/privacy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/privacy(?:/)?$"
    },
    {
      "page": "/research",
      "regex": "^/research(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/research(?:/)?$"
    },
    {
      "page": "/settings",
      "regex": "^/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings(?:/)?$"
    },
    {
      "page": "/team",
      "regex": "^/team(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/team(?:/)?$"
    },
    {
      "page": "/test_dashboard",
      "regex": "^/test_dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test_dashboard(?:/)?$"
    },
    {
      "page": "/workflow",
      "regex": "^/workflow(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/workflow(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}